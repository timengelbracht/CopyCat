# Base image: ROS Noetic on Ubuntu 20.04
FROM ros:noetic

# Environment setup
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ros-noetic-rosbag \
    ros-noetic-cv-bridge \
    python3-pip \
    git \
    build-essential \
    cmake \
    nano \
    curl \
    mesa-utils \
    ros-noetic-plotjuggler-ros \
    ros-noetic-robot-state-publisher \
    ros-noetic-joint-state-publisher \
    ros-noetic-ros-control \
    ros-noetic-ros-controllers \
    ros-noetic-dynamixel-workbench-controllers \
    ros-noetic-rosserial-arduino \
    ros-noetic-rosserial \
    python3-catkin-tools \
    v4l-utils \
    udev \
    libusb-1.0-0-dev \
    libhidapi-libusb0 \
    libhidapi-dev \
    libopencv-dev \
    libopencv-viz-dev \
    libegl1 libgles2 libglvnd0 libglvnd-dev libgl1-mesa-glx \
    lsb-release gnupg2 zstd \
    && rm -rf /var/lib/apt/lists/*

# Create catkin workspace
RUN mkdir -p /catkin_ws/src
WORKDIR /catkin_ws

# Clone ROS packages
RUN git clone --recursive --branch noetic-devel https://github.com/ROBOTIS-GIT/dynamixel-workbench-msgs.git src/dynamixel-workbench-msgs
RUN git clone --recursive --branch noetic-devel https://github.com/ROBOTIS-GIT/dynamixel-workbench.git src/dynamixel-workbench
RUN git clone https://github.com/timengelbracht/gelsight_digit_ros.git src/gelsight_digit_ros
RUN git clone https://github.com/timengelbracht/zed_open_capture_ros.git src/zed_open_capture_ros

# Install ZED Open Capture
RUN git clone https://github.com/stereolabs/zed-open-capture.git src/zed-open-capture
WORKDIR /catkin_ws/src/zed-open-capture/udev
RUN bash install_udev_rule.sh
WORKDIR /catkin_ws/src/zed-open-capture
RUN mkdir build && cd build && cmake .. && make -j$(nproc) && make install && ldconfig

# Install SSH key for secure access to private repos
RUN mkdir -p /root/.ssh
COPY id_ed25519 /root/.ssh/id_ed25519
COPY id_ed25519.pub /root/.ssh/id_ed25519.pub
RUN chmod 600 /root/.ssh/id_ed25519
RUN ssh-keyscan bitbucket.org >> /root/.ssh/known_hosts
RUN ssh-keyscan github.com >> /root/.ssh/known_hosts
RUN GIT_SSH_COMMAND="ssh -i /root/.ssh/id_ed25519 -o IdentitiesOnly=yes" git clone git@github.com:timengelbracht/gripper_force_controller.git src/gripper_force_controller

# Install ZED SDK 3.8.2 for JetPack 5.0.2 (L4T 35.1.0)
WORKDIR /catkin_ws
RUN wget -O ZED_SDK.run "https://download.stereolabs.com/zedsdk/3.8/jetsons/ZED_SDK_Tegra_L4T35.1_v3.8.2.zstd.run" && \
    chmod +x ZED_SDK.run && \
    ./ZED_SDK.run silent skip_tools && \
    rm ZED_SDK.run

# Clone ZED ROS wrapper
RUN git clone --recursive https://github.com/stereolabs/zed-ros-wrapper.git src/zed-ros-wrapper

# Python dependencies for gelsight
RUN pip install -r src/gelsight_digit_ros/requirements.txt

# Overwrite custom Dynamixel config
COPY basic.yaml /catkin_ws/src/dynamixel-workbench/dynamixel_workbench_controllers/config/basic.yaml

# Build the workspace
RUN /bin/bash -c "source /opt/ros/noetic/setup.bash && catkin build"

# Setup shell environment
SHELL ["/bin/bash", "-c"]
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
RUN echo "source /catkin_ws/devel/setup.bash" >> ~/.bashrc

# Entry point
CMD ["bash"]

