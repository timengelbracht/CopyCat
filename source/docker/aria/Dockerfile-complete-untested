FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

# Basic dev tools and dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    wget \
    curl \
    gnupg2 \
    lsb-release \
    software-properties-common \
    cmake \
    libeigen3-dev \
    libopencv-dev \
    libgl1-mesa-glx \
    libx11-dev \
    libglfw3-dev \
    libglew-dev \
    libtbb-dev \
    libjsoncpp-dev \
    libspdlog-dev \
    libfmt-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libxi-dev \
    libxxf86vm-dev \
    libxcursor-dev \
    libxinerama-dev \
    libc++-dev \
    libc++abi-dev \
    clang \
    zstd \
    python3 \
    python3-pip \
    python3-dev \
    python3-setuptools \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Alias for Python
RUN ln -s /usr/bin/python3 /usr/bin/python

# Upgrade pip and install Python packages
RUN python3 -m pip install --upgrade pip
RUN pip3 install \
    numpy \
    wheel \
    matplotlib \
    opencv-python \
    setuptools \
    moviepy==1.0.3 \
    aria_studio \
    projectaria_client_sdk \
    projectaria_tools \
    'rosbags[image]' \
    pye57 \
    blinker

# Install latest CMake (3.27+)
RUN apt-get purge -y cmake && \
    wget https://github.com/Kitware/CMake/releases/download/v3.27.9/cmake-3.27.9-linux-x86_64.sh && \
    chmod +x cmake-3.27.9-linux-x86_64.sh && \
    ./cmake-3.27.9-linux-x86_64.sh --skip-license --prefix=/usr/local && \
    rm cmake-3.27.9-linux-x86_64.sh

# CUDA 12.2 installation
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin && \
    mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600 && \
    wget https://developer.download.nvidia.com/compute/cuda/12.2.0/local_installers/cuda-repo-ubuntu2204-12-2-local_12.2.0-535.54.03-1_amd64.deb && \
    dpkg -i cuda-repo-ubuntu2204-12-2-local_12.2.0-535.54.03-1_amd64.deb && \
    cp /var/cuda-repo-ubuntu2204-12-2-local/cuda-*-keyring.gpg /usr/share/keyrings/ && \
    apt-get update && apt-get install -y cuda-toolkit-12-2

ENV PATH=/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}

# Install ZED SDK (silent)
RUN echo "# ZED SDK install" && \
    wget -q --no-check-certificate -O ZED_SDK_Linux.run https://download.stereolabs.com/zedsdk/4.0/ubuntu22/cuda12 && \
    chmod +x ZED_SDK_Linux.run && \
    ./ZED_SDK_Linux.run silent skip_tools skip_drivers && \
    rm -rf /usr/local/zed/resources/* && \
    rm -f ZED_SDK_Linux.run

# Build and install Open3D with CUDA
RUN git clone --recursive https://github.com/isl-org/Open3D /open3d && \
    cd /open3d && \
    mkdir build && cd build && \
    cmake .. \
      -DCMAKE_INSTALL_PREFIX=/usr/local \
      -DBUILD_CUDA_MODULE=ON \
      -DCUDA_ARCH_NAME=Auto \
      -DBUILD_GUI=ON \
      -DBUILD_SHARED_LIBS=ON \
      -DPYTHON_EXECUTABLE=$(which python3) && \
    make -j$(nproc) && make install && \
    make pip-package -j$(nproc) && \
    pip install build/lib/python_package/pip_package/open3d-*.whl

# Clone and install Hierarchical-Localization
RUN git clone --recursive https://github.com/cvg/Hierarchical-Localization.git /Hierarchical-Localization && \
    cd /Hierarchical-Localization && \
    python -m pip install -e .

CMD ["/bin/bash"]

